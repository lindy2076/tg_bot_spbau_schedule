# from enum import Enum

class ErrorMessages(str):
    NO_GROUP = "–≤—ã–±–µ—Ä–∏ –≤ /setgr —Å–≤–æ—é –≥—Ä—É–ø–ø—É"
    NO_SCHEDULE = "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–µ—Ç."


class TextResponse(str):
    SEE_MENU = "–ø–æ—Å–º–æ—Ç—Ä–∏ –≤ –º–µ–Ω—é, —Ç–∞–º –∫–æ–º–∞–Ω–¥—ã –≤—Å—è–∫–∏–µ. –Ω–æ –ø–æ–∫–∞ –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å —Å–≤–æ—é –≥—Ä—É–ø–ø—É:"
    CHOOSE_DAY = "–≤—ã–±–µ—Ä–∏ –¥–µ–Ω—å:"
    CHOOSE_GROUP = "–Ω–∞–¥–æ –≤—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É:"
    NO_SCHEDULE_FOR_GROUP = "–ø–æ–∫–∞ –¥–ª—è —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–µ—Ç..."
    NO_SCHEDULE_FOR_DAY = "–Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–µ—Ç..."
    DAY_NOTHING = "–ù–ò–ß–ï–ì–û!!! –°–í–û–ë–û–î–ê!!!"
    NEXT_CLASS_NONE = "–∫–∞–∂–µ—Ç—Å—è –Ω–∏—á–µ–≥–æ –Ω–µ –∏–¥—ë—Ç..."
    SAME_GROUP_CHOSEN = "–∫–∞–∂–µ—Ç—Å—è —Ç—ã —É–∂–µ –≤—ã–±—Ä–∞–ª —ç—Ç—É –≥—Ä—É–ø–ø—É..."
    USER_DELETED = "—Ç–µ–±—è –±–æ–ª—å—à–µ (–∞ –º–æ–∂–µ—Ç –∏ –Ω–µ –±–æ–ª—å—à–µ) –Ω–µ—Ç –≤ –º–æ–µ–π –±–¥. (–Ω–æ –≤ –ª–æ–≥–∞—Ö –µ—Å—Ç—åüôÉ)"
    CHOOSE_GROUP_POLITE = "–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –ø–æ–∫–∞ –æ —Ç–µ–±–µ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–Ω–∞—é. –ø–æ–ø—Ä–æ–±—É–π /setgr *–Ω–æ–º–µ—Ä_–≥—Ä—É–ø–ø—ã*"

    POLICY = "\n\n—è —Ö—Ä–∞–Ω—é —Ç–æ–ª—å–∫–æ –∂–∏–∑–Ω–µ–Ω–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∞ –∏–º–µ–Ω–Ω–æ: " + \
        "–∞–π–¥–∏ —Ç–µ–ª–µ–≥—Ä–∞–º–∞, –∏–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ, –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã, –≤—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è, " + \
        "–≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É, –≤—Ä–µ–º—è –æ–Ω–ª–∞–π–Ω–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ, —Ñ–∞–º–∏–ª–∏—é –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ, " + \
        "–≤–∞—à—É –ø–ª–∞—Ç—ë–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, –∞ —Ç–∞–∫–∂–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n" + \
        "—à—É—á—ÉüòÅ. —è —Ö—Ä–∞–Ω—é —Ç–æ–ª—å–∫–æ –≤–∞—à —Ç–≥ –∞–π–¥–∏, —Ç–≥ –∏–º—è, –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –∏ –≤—Ä–µ–º—è " + \
        "–æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –±–æ—Ç—É. —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Å–µ–±—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–ø–∏—à–∏—Ç–µ /del"

    @classmethod
    def greet(cls, username: str) -> str:
        return "–ü–†–ò–í–ï–¢, {:s}!! ü§óü§óü§ó".format(username)

    @classmethod
    def echo_and_dayselect(cls, username: str, msg: str) -> str:
        """
        –ü–æ–≤—Ç–æ—Ä—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏.
        """
        return "{:s} –≥–æ–≤–æ—Ä–∏—Ç: {:s}\n–≤—ã–±–µ—Ä–∏ –¥–µ–Ω—å: ".format(username, msg)

    @classmethod
    def curr_class(cls, class_name: str, class_room: str ) -> str:
        """
        –ü–∏—à–µ—Ç, —á—Ç–æ —Ç–µ–∫—É—â–∞—è –ø–∞—Ä–∞ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º class_name –∏–¥—ë—Ç –≤ class_room
        """
        return "—Å–µ–π—á–∞—Å –∏–¥—ë—Ç {:s} –≤ {:s}".format(class_name, class_room)
    
    @classmethod
    def future_class(cls, class_name: str, class_room: str, class_time: str) -> str:
        """
        –ü–∏—à–µ—Ç, —á—Ç–æ —Å–ª–µ–¥—É—é—â–∞—è –ø–∞—Ä–∞ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º class_name –±—É–¥–µ—Ç –≤ class_room –≤ class_time 
        """
        return "—Å–µ–π—á–∞—Å –±—É–¥–µ—Ç {:s} –≤ {:s} –≤ {:s}".format(class_name, class_time, class_room)
    
    @classmethod
    def new_group(cls, new_group: str) -> str:
        return "—Ç–µ–ø–µ—Ä—å {:s} - –≤–∞—à–∞ –≥—Ä—É–ø–ø–∞".format(new_group)

    @classmethod
    def info_and_policy(cls, group: str) -> str:
        return "—è –≤—ã–¥–∞—é –¥–ª—è —Ç–µ–±—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –Ω–æ–º–µ—Ä {:s}".format(group) + TextResponse.POLICY
